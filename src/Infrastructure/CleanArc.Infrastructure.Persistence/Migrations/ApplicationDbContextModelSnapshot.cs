// <auto-generated />
using System;
using CleanArc.Infrastructure.Persistence;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Persistence.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("CleanArc.Domain.Entities.Order.Order", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("OrderName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Orders");
                });

            modelBuilder.Entity("CleanArc.Domain.Entities.TAdresse", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("ActifAd")
                        .HasColumnType("bit");

                    b.Property<string>("CpAdr")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("IdDele")
                        .HasColumnType("int");

                    b.Property<int>("IdGouv")
                        .HasColumnType("int");

                    b.Property<int>("IdLocA")
                        .HasColumnType("int");

                    b.Property<int>("IdNldp")
                        .HasColumnType("int");

                    b.Property<int?>("IndividuId")
                        .HasColumnType("int");

                    b.Property<string>("LibAdr")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("idTIndividu")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("IndividuId");

                    b.ToTable("TAdresses");
                });

            modelBuilder.Entity("CleanArc.Domain.Entities.TBordereau", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("AnneeBord")
                        .IsRequired()
                        .HasColumnType("nvarchar(1)");

                    b.Property<int?>("ContratId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DatBord")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DatSaisie")
                        .HasColumnType("datetime2");

                    b.Property<string>("DeviseAch")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Emetteur")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("MontTotB")
                        .HasColumnType("decimal(18,2)");

                    b.Property<short>("NbDocBor")
                        .HasColumnType("smallint");

                    b.Property<string>("NumBord")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RefAchBo")
                        .HasColumnType("int");

                    b.Property<int>("RefAdhBo")
                        .HasColumnType("int");

                    b.Property<int>("RefCtrBo")
                        .HasColumnType("int");

                    b.Property<bool>("SoldeBord")
                        .HasColumnType("bit");

                    b.Property<bool>("ValideBor")
                        .HasColumnType("bit");

                    b.Property<int>("idContrat")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ContratId");

                    b.ToTable("TBordereaus");
                });

            modelBuilder.Entity("CleanArc.Domain.Entities.TCalcDispo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("ContratId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateCalcDispo")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("DispoCalcDispo")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("FinanceCalcDispo")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("InteretJCalcDispo")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("MargeJCalcDispo")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("RefAdhCalcDispo")
                        .HasColumnType("int");

                    b.Property<int>("RefCtrCalcDispo")
                        .HasColumnType("int");

                    b.Property<decimal>("SomAvoirCalcDispo")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("SomCommFactorCalcDispo")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("SomCreditCalcDispo")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("SomDebitCalcDispo")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("SomFactCalcDispo")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("SomFdgFactCalcDispo")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("SomFdgLibereCalcDispo")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("SomTvaCommFactorCalcDispo")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("TmmJCalcDispo")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("idContrat")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ContratId");

                    b.ToTable("TCalcDispos");
                });

            modelBuilder.Entity("CleanArc.Domain.Entities.TCalcInt", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("ContratId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DatCalcInt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("MontCalcInt")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("idContrat")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ContratId");

                    b.ToTable("TCalcInts");
                });

            modelBuilder.Entity("CleanArc.Domain.Entities.TCalcIntIR", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("ContratId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateEcheanceIr")
                        .HasColumnType("datetime2");

                    b.Property<int>("MajorIntIntFinIr")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("MontCalcIr")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("MontOuvDetBordIr")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("RefCtrCalcIr")
                        .HasColumnType("int");

                    b.Property<string>("RefDocumentDetBor")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("idContrat")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ContratId");

                    b.ToTable("TCalcIntIRS");
                });

            modelBuilder.Entity("CleanArc.Domain.Entities.TComFactoring", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("MontMinCtrCommFactoring")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("MontMinDocCommFactoring")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("RefCtrCommFactoring")
                        .HasColumnType("int");

                    b.Property<int?>("TContratId")
                        .HasColumnType("int");

                    b.Property<string>("TxCommFactoring")
                        .IsRequired()
                        .HasColumnType("nvarchar(1)");

                    b.Property<string>("TypCommFactoring")
                        .IsRequired()
                        .HasColumnType("nvarchar(1)");

                    b.HasKey("Id");

                    b.HasIndex("TContratId");

                    b.ToTable("TComFactorings");
                });

            modelBuilder.Entity("CleanArc.Domain.Entities.TComMfg", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("CodeMfg")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ContratId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateEnvoieMfg")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateSaisieMfg")
                        .HasColumnType("datetime2");

                    b.Property<bool>("FlagMfg")
                        .HasColumnType("bit");

                    b.Property<decimal>("MntCommMfg")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("NumBordMfg")
                        .HasColumnType("int");

                    b.Property<string>("RefAdhMfg")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TypeActionMfg")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TypeMfg")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("idContrat")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ContratId");

                    b.ToTable("TComMfgs");
                });

            modelBuilder.Entity("CleanArc.Domain.Entities.TConfigurationEmai", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Enabl")
                        .HasColumnType("int");

                    b.Property<int?>("FactorId")
                        .HasColumnType("int");

                    b.Property<int>("IdFa")
                        .HasColumnType("int");

                    b.Property<string>("Mdp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("Port")
                        .HasColumnType("int");

                    b.Property<string>("Smtp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("idFactor")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("FactorId");

                    b.ToTable("TConfigurationEmais");
                });

            modelBuilder.Entity("CleanArc.Domain.Entities.TContact", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("ActifContact")
                        .HasColumnType("bit");

                    b.Property<DateTime>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("FaxContact")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Mail1Coontact")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Mail2Coontact")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("NomPreContact")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PosContact")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("TComFactoringId")
                        .HasColumnType("int");

                    b.Property<string>("Tel1Contact")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Tel2Contact")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("TComFactoringId");

                    b.ToTable("TContacts");
                });

            modelBuilder.Entity("CleanArc.Domain.Entities.TContrat", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<decimal>("CaCtr")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("CaExpCtr")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("CaImpCtr")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DatSignCtr")
                        .HasColumnType("datetime2");

                    b.Property<int>("DelaiMaxRegCtr")
                        .HasColumnType("int");

                    b.Property<int>("DelaiMoyenRegCtr")
                        .HasColumnType("int");

                    b.Property<decimal>("DernMontDisp2")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int?>("DetAssId")
                        .HasColumnType("int");

                    b.Property<string>("DeviseCtr")
                        .IsRequired()
                        .HasColumnType("nvarchar(1)");

                    b.Property<byte>("FactRegCtr")
                        .HasColumnType("tinyint");

                    b.Property<int?>("FactorId")
                        .HasColumnType("int");

                    b.Property<int?>("FraisDiversId")
                        .HasColumnType("int");

                    b.Property<decimal>("LimFinCtr")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("NbAchPrevuCtr")
                        .HasColumnType("int");

                    b.Property<int>("NbAvoirsPrevuCtr")
                        .HasColumnType("int");

                    b.Property<int>("NbFactPrevuCtr")
                        .HasColumnType("int");

                    b.Property<int>("NbRemisesPrevuCtr")
                        .HasColumnType("int");

                    b.Property<int>("RefCtr")
                        .HasColumnType("int");

                    b.Property<string>("RefCtrPapierCtr")
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte>("ServiceCtr")
                        .HasColumnType("tinyint");

                    b.Property<string>("StatutCtr")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("TFraisReleveId")
                        .HasColumnType("int");

                    b.Property<int?>("TMvtDebitId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("datDebCtr")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("datProchVersCtr")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("datResilCtr")
                        .HasColumnType("datetime2");

                    b.Property<int>("idDetAss")
                        .HasColumnType("int");

                    b.Property<int>("idFactor")
                        .HasColumnType("int");

                    b.Property<int>("idFraisDivers")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("DetAssId");

                    b.HasIndex("FactorId");

                    b.HasIndex("FraisDiversId");

                    b.HasIndex("TFraisReleveId");

                    b.HasIndex("TMvtDebitId");

                    b.ToTable("TContrats");
                });

            modelBuilder.Entity("CleanArc.Domain.Entities.TDemLimite", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("ActifDemLimi")
                        .HasColumnType("bit");

                    b.Property<int?>("ContactId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DatAnnulDemLi")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DatDemLim")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DatLastDemLim")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DatLimDemLim")
                        .HasColumnType("datetime2");

                    b.Property<string>("DecisionLim")
                        .HasColumnType("nvarchar(max)");

                    b.Property<short>("DelaisAcc")
                        .HasColumnType("smallint");

                    b.Property<short>("DelaisDemLim")
                        .HasColumnType("smallint");

                    b.Property<string>("Devise")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("IndividuId")
                        .HasColumnType("int");

                    b.Property<string>("ModePayAcc")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ModePayDemLim")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("MontAcc")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("MontDemLim")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("MontLimAchAdh")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("RefAchLim")
                        .HasColumnType("int");

                    b.Property<int>("RefCtrDemLim")
                        .HasColumnType("int");

                    b.Property<string>("SortDemLim")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TypDemLim")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("idContact")
                        .HasColumnType("int");

                    b.Property<int>("idIndividu")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ContactId");

                    b.HasIndex("IndividuId");

                    b.ToTable("TDemLimites");
                });

            modelBuilder.Entity("CleanArc.Domain.Entities.TDetAss", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<short>("ActifAss")
                        .HasColumnType("smallint");

                    b.Property<DateTime>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<short>("DelaisDeclarationSinistreAs")
                        .HasColumnType("smallint");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<short>("PrimeAss")
                        .HasColumnType("smallint");

                    b.Property<int>("RefAss")
                        .HasColumnType("int");

                    b.Property<int>("RefCtrAss")
                        .HasColumnType("int");

                    b.Property<short>("TxCouvertureAss")
                        .HasColumnType("smallint");

                    b.HasKey("Id");

                    b.ToTable("TDetAsses");
                });

            modelBuilder.Entity("CleanArc.Domain.Entities.TDetBord", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("AnneeBord")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("AnnulDetBord")
                        .HasColumnType("bit");

                    b.Property<int?>("BordereauId")
                        .HasColumnType("int");

                    b.Property<string>("CommDetBord")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ContratId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DatDetBord")
                        .HasColumnType("datetime2");

                    b.Property<short>("DelaiPaieDetBord")
                        .HasColumnType("smallint");

                    b.Property<string>("DeviseDetBord")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("DocGedId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("EchAprProrogDetBord")
                        .HasColumnType("datetime2");

                    b.Property<short>("EchDetBord")
                        .HasColumnType("smallint");

                    b.Property<int>("ILitige")
                        .HasColumnType("int");

                    b.Property<int>("IdCalcDispoDetBord")
                        .HasColumnType("int");

                    b.Property<int?>("LitigeId")
                        .HasColumnType("int");

                    b.Property<string>("ModeRegDetBord")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("MontCommFactDetBord")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("MontFdgDetBord")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("MontFdgLibereDetBord")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("MontOuvDetBord")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("MontTtcCommFactDetBor")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("MontTtcDetBord")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("MontTvaCommFactDetBor")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("NumBord")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NumCreanceAssBord")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RefDetBord")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RefIndDetBord")
                        .HasColumnType("int");

                    b.Property<string>("RetenuDetBord")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("TxCommFactDetBord")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("TxFdgDetBord")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("TxTvaCommFactDetBord")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("TypAssDetBord")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TypDetBord")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TypRegDetBord")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("ValideDetBord")
                        .HasColumnType("bit");

                    b.Property<int>("idBordereau")
                        .HasColumnType("int");

                    b.Property<int>("idContrat")
                        .HasColumnType("int");

                    b.Property<int>("idDocGed")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("BordereauId");

                    b.HasIndex("ContratId");

                    b.HasIndex("DocGedId");

                    b.HasIndex("LitigeId");

                    b.ToTable("TDetBords");
                });

            modelBuilder.Entity("CleanArc.Domain.Entities.TDocGed", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("AdressDocGed")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AemoireGed")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ArchiveGed")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("DataGed")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DateScanGed")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateTacheGed")
                        .HasColumnType("datetime2");

                    b.Property<string>("EtapeGed")
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte>("EtatGed")
                        .HasColumnType("tinyint");

                    b.Property<string>("EtgageGed")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("FinancementId")
                        .HasColumnType("int");

                    b.Property<int>("IdAnneeBordGed")
                        .HasColumnType("int");

                    b.Property<int>("IdBorGed")
                        .HasColumnType("int");

                    b.Property<int>("IdCreditGed")
                        .HasColumnType("int");

                    b.Property<int>("IdCtrGed")
                        .HasColumnType("int");

                    b.Property<int>("IdDebitGed")
                        .HasColumnType("int");

                    b.Property<int>("IdDetBordGed")
                        .HasColumnType("int");

                    b.Property<string>("IdEmetteurGed")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("IdEncGed")
                        .HasColumnType("int");

                    b.Property<int>("IdFinancementGed")
                        .HasColumnType("int");

                    b.Property<int>("IdGestionnaireGed")
                        .HasColumnType("int");

                    b.Property<string>("Libelle2Ged")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LibelleGed")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("NameGed")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SalleGed")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("idFinancement")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("FinancementId");

                    b.ToTable("TDocGeds");
                });

            modelBuilder.Entity("CleanArc.Domain.Entities.TEcCpt", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("AnneeEcCpt")
                        .HasColumnType("int");

                    b.Property<string>("CodeCentreAnalyse")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CodeDepEcCpt")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CodeEcCpt")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CodeJournalEcCpt")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CodeTiersEcCpt")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CompteEcCpt")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CompteGenEcCpt")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ContratId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("CreditEcCpt")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime?>("DateEcCpt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateEffetEcCpt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateSaisieEcCpt")
                        .HasColumnType("datetime2");

                    b.Property<string>("DomaineEcCpt")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IntituleEcCpt")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LibelleeEcCpt")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LotEcCpt")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("MontantEcCpt")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("NomUserEcCpt")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NumEcEcCpt")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("NumLigneEcCpt")
                        .HasColumnType("int");

                    b.Property<int>("RefAdhEcCpt")
                        .HasColumnType("int");

                    b.Property<string>("RefMfgAdhEcCpt")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RefPieceEcCpt")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TypeDocEcCpt")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TypeTransactionEcC")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("idContrat")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ContratId");

                    b.ToTable("TEcCpts");
                });

            modelBuilder.Entity("CleanArc.Domain.Entities.TEncaissement", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("BordEnc")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ContratId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DatRecepEnc")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DatValEnc")
                        .HasColumnType("datetime2");

                    b.Property<string>("DeviseEnc")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("IndividuId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("MontEnc")
                        .HasColumnType("decimal(18,2)");

                    b.Property<bool>("Preavis")
                        .HasColumnType("bit");

                    b.Property<int>("RefAchEnc")
                        .HasColumnType("int");

                    b.Property<int>("RefAdhEnc")
                        .HasColumnType("int");

                    b.Property<int>("RefCtrEnc")
                        .HasColumnType("int");

                    b.Property<string>("RefEnc")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RefSeqEnc")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RibEnc")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TypEnc")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("ValideEnc")
                        .HasColumnType("bit");

                    b.Property<int>("idContrat")
                        .HasColumnType("int");

                    b.Property<int>("idIndividu")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ContratId");

                    b.HasIndex("IndividuId");

                    b.ToTable("TEncaissements");
                });

            modelBuilder.Entity("CleanArc.Domain.Entities.TEtatDispo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("ContratId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateEtatDispo")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("DepassLimiteEtatDispo")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("DisponibleEtatDispo")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("RefCtrEtatDispo")
                        .HasColumnType("int");

                    b.Property<decimal>("TotalAvEtatDispo")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("TotalCommEtatDispo")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("TotalCreditEtatDispo")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("TotalDebitEtatDispo")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("TotalDisponible2EtatDispo")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("TotalEncoursFactureEtatDispo")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("TotalFactureEtatDispo")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("TotalFdgEtatDispo")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("TotalFinEtatDispo")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("TotalFinancementDuMoisEtatDispo")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("TotalFondsReserveEtatDispo")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("TotalFraisEtatDispo")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("TotalInstruPaimentsImpEtatDispo")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("TotalInteretEtatDispo")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("TotalIrEtatDispo")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("TotalLitigesOuvertEtatDispo")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("TotalRetardPaiementAlgoEtatDispo")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("TotalRetenueEtatDispo")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("idContrat")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ContratId");

                    b.ToTable("TEtatDispos");
                });

            modelBuilder.Entity("CleanArc.Domain.Entities.TFactor", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Adresse")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Arbv")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Capital")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CapitalLettre")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CnxDb")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CodeDouane")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CodeTva")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Db")
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte>("DetDocGed")
                        .HasColumnType("tinyint");

                    b.Property<string>("Devise")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Exercice")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Fax")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Langue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Logo16")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Logo32")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Logo48")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MF")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MdpCnx")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Pays")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RC")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RaisonSocial")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SiteWeb")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SrvDb")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Tel")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("TrtmmId")
                        .HasColumnType("int");

                    b.Property<int>("idTMM")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("TrtmmId");

                    b.ToTable("TFactors");
                });

            modelBuilder.Entity("CleanArc.Domain.Entities.TFinancement", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("ContratId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DatFin")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DatInstr")
                        .HasColumnType("datetime2");

                    b.Property<string>("EtatFin")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("IdDispo")
                        .HasColumnType("int");

                    b.Property<string>("InstrFin")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("MontFin")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("RefCtrF")
                        .HasColumnType("int");

                    b.Property<string>("RefInstr")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TypeEnc")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("idContrat")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ContratId");

                    b.ToTable("TFinancements");
                });

            modelBuilder.Entity("CleanArc.Domain.Entities.TFondGarantie", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("ContratId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("LibFdg")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("MontMaxFdg")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("MontMinFdg")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("RefCtrFdg")
                        .HasColumnType("int");

                    b.Property<decimal>("TxFdg")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("TypDocRemisFdg")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TypFdg")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("idContrat")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ContratId");

                    b.ToTable("TFondGaranties");
                });

            modelBuilder.Entity("CleanArc.Domain.Entities.TFraisDivers", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("ComFactoringId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("LibFraisDivers")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("MontParInstrFraisDivers")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("RefCtrFraisDivers")
                        .HasColumnType("int");

                    b.Property<string>("TypFraisDivers")
                        .IsRequired()
                        .HasColumnType("nvarchar(1)");

                    b.Property<int>("idComFactoring")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ComFactoringId");

                    b.ToTable("TFraisDivers");
                });

            modelBuilder.Entity("CleanArc.Domain.Entities.TFraisPaiment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("ContratId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("LibFraisPaie")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("MontParInstrFraisPaie")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("RefCtrFraisPaie")
                        .HasColumnType("int");

                    b.Property<string>("TypFraisPaie")
                        .IsRequired()
                        .HasColumnType("nvarchar(1)");

                    b.Property<int>("idContrat")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ContratId");

                    b.ToTable("TFraisPaiments");
                });

            modelBuilder.Entity("CleanArc.Domain.Entities.TFraisReleve", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("IdFraisRel")
                        .HasColumnType("int");

                    b.Property<decimal>("MNTTCT")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("MontParInstrFraisPaie")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("NbPiece")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RefCtr")
                        .HasColumnType("int");

                    b.Property<decimal>("TTCPP")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("TVA")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("TaxTva")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("TypEnc")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("datRecepEnc")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("TFraisReleves");
                });

            modelBuilder.Entity("CleanArc.Domain.Entities.TGroupe", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("NomGro")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("TGroupes");
                });

            modelBuilder.Entity("CleanArc.Domain.Entities.TImpaye", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateImp")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateResolImp")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateSaisiImp")
                        .HasColumnType("datetime2");

                    b.Property<int>("IdDetBordImp")
                        .HasColumnType("int");

                    b.Property<int>("IdEncImp")
                        .HasColumnType("int");

                    b.Property<string>("IdNvEncs")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ImpayeId")
                        .HasColumnType("int");

                    b.Property<bool>("IsResolu")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("MontImp")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("idImpaye")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ImpayeId");

                    b.ToTable("TImpayes");
                });

            modelBuilder.Entity("CleanArc.Domain.Entities.TIntFinancement", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("ContratId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DatDebValidIntF")
                        .HasColumnType("datetime2");

                    b.Property<int>("DelaiMaxPaiIntFin")
                        .HasColumnType("int");

                    b.Property<decimal>("MajorIntIntFin")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("PreCompteIntFin")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("RefCtrIntFin")
                        .HasColumnType("int");

                    b.Property<decimal>("TxIntMarcheIntFin")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("TxMargeCtrIntFin")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("TypInstrIntFin")
                        .IsRequired()
                        .HasColumnType("nvarchar(1)");

                    b.Property<int>("idContrat")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ContratId");

                    b.ToTable("TIntFinancements");
                });

            modelBuilder.Entity("CleanArc.Domain.Entities.TJCir", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("ContratId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("IdRoleCir")
                        .HasColumnType("int");

                    b.Property<int?>("IndividuId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("RefCtrCir")
                        .HasColumnType("int");

                    b.Property<int>("RefIndCir")
                        .HasColumnType("int");

                    b.Property<int?>("RoleId")
                        .HasColumnType("int");

                    b.Property<int>("idContrat")
                        .HasColumnType("int");

                    b.Property<int>("idIndividu")
                        .HasColumnType("int");

                    b.Property<int>("idTRole")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ContratId");

                    b.HasIndex("IndividuId");

                    b.HasIndex("RoleId");

                    b.ToTable("TJCirs");
                });

            modelBuilder.Entity("CleanArc.Domain.Entities.TJLettrage", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DatLet")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DatReconcil")
                        .HasColumnType("datetime2");

                    b.Property<int?>("DetBordtId")
                        .HasColumnType("int");

                    b.Property<int?>("EncaissementId")
                        .HasColumnType("int");

                    b.Property<int>("IdDetBordLet")
                        .HasColumnType("int");

                    b.Property<int>("IdEncLet")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("MontTtcLet")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("TDetBordIdDetBord")
                        .HasColumnType("int");

                    b.Property<int>("TDetBordRefCtrDetBord")
                        .HasColumnType("int");

                    b.Property<int>("TEncaissementIdEnc")
                        .HasColumnType("int");

                    b.Property<bool>("ValideLet")
                        .HasColumnType("bit");

                    b.Property<bool>("ValideReconcil")
                        .HasColumnType("bit");

                    b.Property<int>("idDetBord")
                        .HasColumnType("int");

                    b.Property<int>("idEncaissement")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("DetBordtId");

                    b.HasIndex("EncaissementId");

                    b.ToTable("TJLettrages");
                });

            modelBuilder.Entity("CleanArc.Domain.Entities.TLitige", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("ContratId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateLit")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("EchLit")
                        .HasColumnType("datetime2");

                    b.Property<byte>("EtatLit")
                        .HasColumnType("tinyint");

                    b.Property<int>("IdDetBordLit")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("MontLt")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("RefCtrLit")
                        .HasColumnType("int");

                    b.Property<string>("TypLit")
                        .IsRequired()
                        .HasColumnType("nvarchar(1)");

                    b.Property<int>("idContrat")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ContratId");

                    b.ToTable("TLitiges");
                });

            modelBuilder.Entity("CleanArc.Domain.Entities.TMvtCredit", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("AvrvCerdit")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ContratId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateCredit")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateValEncCredit")
                        .HasColumnType("datetime2");

                    b.Property<string>("LibelleLibreCredit")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("MontCredit")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("RefCtrCerdit")
                        .HasColumnType("int");

                    b.Property<string>("RefEncCredit")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TypCredit")
                        .IsRequired()
                        .HasColumnType("nvarchar(1)");

                    b.Property<int>("idContrat")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ContratId");

                    b.ToTable("TMvtCredits");
                });

            modelBuilder.Entity("CleanArc.Domain.Entities.TMvtDebit", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("AbevDebit")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateDebit")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("MontDebit")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("RefCtrDebit")
                        .HasColumnType("int");

                    b.Property<string>("TypDebit")
                        .IsRequired()
                        .HasColumnType("nvarchar(1)");

                    b.HasKey("Id");

                    b.ToTable("TMvtDebits");
                });

            modelBuilder.Entity("CleanArc.Domain.Entities.TPermissions", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("GrpUserId")
                        .HasColumnType("int");

                    b.Property<int>("ListValId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("TrListValId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("GrpUserId");

                    b.HasIndex("TrListValId");

                    b.ToTable("TPermissions");
                });

            modelBuilder.Entity("CleanArc.Domain.Entities.TPropagation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("ContratId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DatProg")
                        .HasColumnType("datetime2");

                    b.Property<int?>("DetBordId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("EchProg")
                        .HasColumnType("datetime2");

                    b.Property<bool>("EtatProg")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("MotifProg")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RefCtrProg")
                        .HasColumnType("int");

                    b.Property<string>("TypProg")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("idContrat")
                        .HasColumnType("int");

                    b.Property<int>("idDetBord")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ContratId");

                    b.HasIndex("DetBordId");

                    b.ToTable("TPropagations");
                });

            modelBuilder.Entity("CleanArc.Domain.Entities.TRActprofBct", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Classe")
                        .IsRequired()
                        .HasColumnType("nvarchar(1)");

                    b.Property<string>("CodeActivite")
                        .IsRequired()
                        .HasColumnType("nvarchar(1)");

                    b.Property<string>("CodeClasse")
                        .IsRequired()
                        .HasColumnType("nvarchar(1)");

                    b.Property<string>("CodeClasse1")
                        .IsRequired()
                        .HasColumnType("nvarchar(1)");

                    b.Property<string>("CodeSousClasse")
                        .IsRequired()
                        .HasColumnType("nvarchar(1)");

                    b.Property<string>("CodeSousSection")
                        .IsRequired()
                        .HasColumnType("nvarchar(1)");

                    b.Property<DateTime>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<int?>("FactorId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Section")
                        .IsRequired()
                        .HasColumnType("nvarchar(1)");

                    b.Property<string>("SousClasse")
                        .IsRequired()
                        .HasColumnType("nvarchar(1)");

                    b.Property<string>("SousSection")
                        .IsRequired()
                        .HasColumnType("nvarchar(1)");

                    b.Property<string>("codeSection")
                        .IsRequired()
                        .HasColumnType("nvarchar(1)");

                    b.Property<int>("idFactor")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("FactorId");

                    b.ToTable("TRActprofBcts");
                });

            modelBuilder.Entity("CleanArc.Domain.Entities.TRAgBq", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Agence")
                        .IsRequired()
                        .HasColumnType("nvarchar(1)");

                    b.Property<string>("Banque")
                        .IsRequired()
                        .HasColumnType("nvarchar(1)");

                    b.Property<string>("CodeAg")
                        .IsRequired()
                        .HasColumnType("nvarchar(1)");

                    b.Property<string>("CodeBq")
                        .IsRequired()
                        .HasColumnType("nvarchar(1)");

                    b.Property<string>("CodeBqAg")
                        .IsRequired()
                        .HasColumnType("nvarchar(1)");

                    b.Property<DateTime>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<int?>("FactorId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("idFactor")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("FactorId");

                    b.ToTable("TRAgBqs");
                });

            modelBuilder.Entity("CleanArc.Domain.Entities.TRComFactoring", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<int?>("FactorId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("MontMinCtrCommFactoring")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("MontMinDocCommFactoring")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("TxCommFactoring")
                        .IsRequired()
                        .HasColumnType("nvarchar(1)");

                    b.Property<string>("TypCommFactoring")
                        .IsRequired()
                        .HasColumnType("nvarchar(1)");

                    b.Property<int>("idFactor")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("FactorId");

                    b.ToTable("TRComFactorings");
                });

            modelBuilder.Entity("CleanArc.Domain.Entities.TRCp", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("CodeGouverno")
                        .IsRequired()
                        .HasColumnType("nvarchar(1)");

                    b.Property<string>("CodeRegion")
                        .IsRequired()
                        .HasColumnType("nvarchar(1)");

                    b.Property<string>("Cp")
                        .IsRequired()
                        .HasColumnType("nvarchar(1)");

                    b.Property<DateTime>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<int?>("FactorId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Region")
                        .IsRequired()
                        .HasColumnType("nvarchar(1)");

                    b.Property<string>("Ville")
                        .IsRequired()
                        .HasColumnType("nvarchar(1)");

                    b.Property<int>("idFactor")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("FactorId");

                    b.ToTable("TRCps");
                });

            modelBuilder.Entity("CleanArc.Domain.Entities.TRIntFinancement", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DatDebValidIntF")
                        .HasColumnType("datetime2");

                    b.Property<int>("DelaiMaxPaiIntFi")
                        .HasColumnType("int");

                    b.Property<int?>("FactorId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("PreCompteIntFin")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("TxIntMarcheIntF")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("TxMargeCtrIntFi")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("TypInstrIntFin")
                        .IsRequired()
                        .HasColumnType("nvarchar(1)");

                    b.Property<int>("idFactor")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("FactorId");

                    b.ToTable("TRIntFinancements");
                });

            modelBuilder.Entity("CleanArc.Domain.Entities.TRListFraisDivers", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("AbrevFraisDiv")
                        .IsRequired()
                        .HasColumnType("nvarchar(1)");

                    b.Property<DateTime>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<int?>("FactorId")
                        .HasColumnType("int");

                    b.Property<string>("LibFraisDivers")
                        .IsRequired()
                        .HasColumnType("nvarchar(1)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("MontFraisDive")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("TypeFraisDiver")
                        .IsRequired()
                        .HasColumnType("nvarchar(1)");

                    b.Property<int>("idFactor")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("FactorId");

                    b.ToTable("TRListFraisDivers");
                });

            modelBuilder.Entity("CleanArc.Domain.Entities.TRListVal", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("AprListVal")
                        .IsRequired()
                        .HasColumnType("nvarchar(1)");

                    b.Property<string>("ComListVal")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("LibListVal")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("NbJourListVal")
                        .HasColumnType("int");

                    b.Property<int>("OrdListVal")
                        .HasColumnType("int");

                    b.Property<string>("TypListVal")
                        .IsRequired()
                        .HasColumnType("nvarchar(1)");

                    b.Property<string>("TypeRecouvreme")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("TRListVals");
                });

            modelBuilder.Entity("CleanArc.Domain.Entities.TRNldp", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("AbrvD")
                        .IsRequired()
                        .HasColumnType("nvarchar(1)");

                    b.Property<string>("AbrvLa")
                        .IsRequired()
                        .HasColumnType("nvarchar(1)");

                    b.Property<string>("AbrvN")
                        .IsRequired()
                        .HasColumnType("nvarchar(1)");

                    b.Property<string>("AbrvPa")
                        .IsRequired()
                        .HasColumnType("nvarchar(1)");

                    b.Property<DateTime>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<int?>("FactorId")
                        .HasColumnType("int");

                    b.Property<string>("LibDevi")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LibLan")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LibNt")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LibPays")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("idFactor")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("FactorId");

                    b.ToTable("TRNldps");
                });

            modelBuilder.Entity("CleanArc.Domain.Entities.TRParamPiece", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<int?>("FactorId")
                        .HasColumnType("int");

                    b.Property<string>("LibParamPie")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("SignParamPi")
                        .IsRequired()
                        .HasColumnType("nvarchar(1)");

                    b.Property<string>("TypParamPie")
                        .IsRequired()
                        .HasColumnType("nvarchar(1)");

                    b.Property<int>("idFactor")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("FactorId");

                    b.ToTable("TRParamPieces");
                });

            modelBuilder.Entity("CleanArc.Domain.Entities.TRTMM", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("EndDateTMM")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("RateTMM")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("StartDateTMM")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("TRTMMS");
                });

            modelBuilder.Entity("CleanArc.Domain.Entities.TRTva", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<int?>("FactorId")
                        .HasColumnType("int");

                    b.Property<string>("LibT")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("ValT")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("idFactor")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("FactorId");

                    b.ToTable("TRTvas");
                });

            modelBuilder.Entity("CleanArc.Domain.Entities.TRelance", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("ContratId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateRelance")
                        .HasColumnType("datetime2");

                    b.Property<string>("LibelleRelance")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("RefCtrRelance")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RefDocRelance")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserRelance")
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte>("ValidRelance")
                        .HasColumnType("tinyint");

                    b.Property<int>("idContrat")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ContratId");

                    b.ToTable("TRelances");
                });

            modelBuilder.Entity("CleanArc.Domain.Entities.TRibFactor", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<int?>("FactorId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("RibFactor")
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte>("ValidRibFactor")
                        .HasColumnType("tinyint");

                    b.Property<int>("idFactor")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("FactorId");

                    b.ToTable("TRibFactors");
                });

            modelBuilder.Entity("CleanArc.Domain.Entities.TRole", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("LibRole")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("TRoles");
                });

            modelBuilder.Entity("CleanArc.Domain.Entities.TSGrpUser", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<byte>("ActifGrpUser")
                        .HasColumnType("tinyint");

                    b.Property<DateTime>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("GroupeId")
                        .HasColumnType("int");

                    b.Property<string>("LibGrpUser")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("GroupeId");

                    b.ToTable("TSGrpUsers");
                });

            modelBuilder.Entity("CleanArc.Domain.Entities.TUser", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("ActifUser")
                        .HasColumnType("bit");

                    b.Property<string>("AgenceUser")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("DirectionUser")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("FactorId")
                        .HasColumnType("int");

                    b.Property<string>("FonctionUser")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LoginUser")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MailUser")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MdpUser")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MobileUser")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("NomUser")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OneSignalPlayerId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhotoUser")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PreUser")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ServiceUser")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TelFixeUser")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("TsGrpUserId")
                        .HasColumnType("int");

                    b.Property<int>("idFactor")
                        .HasColumnType("int");

                    b.Property<int>("idTSGrpUser")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("FactorId");

                    b.HasIndex("TsGrpUserId");

                    b.ToTable("TUsers");
                });

            modelBuilder.Entity("CleanArc.Domain.Entities.TUsersWeb", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("ActifUserWeb")
                        .HasColumnType("bit");

                    b.Property<DateTime>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateFinCompte")
                        .HasColumnType("datetime2");

                    b.Property<int?>("IndividuId")
                        .HasColumnType("int");

                    b.Property<string>("LoginWeb")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LogoWeb")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("OneSignalPlayerId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PasswordWeb")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RefIndWeb")
                        .HasColumnType("int");

                    b.Property<int>("idIndividu")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("IndividuId");

                    b.ToTable("TUsersWebs");
                });

            modelBuilder.Entity("CleanArc.Domain.Entities.User.Role", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("DisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("Roles", "usr");
                });

            modelBuilder.Entity("CleanArc.Domain.Entities.User.RoleClaim", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedClaim")
                        .HasColumnType("datetime2");

                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("RoleClaims", "usr");
                });

            modelBuilder.Entity("CleanArc.Domain.Entities.User.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("UserId");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("FamilyName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("GeneratedCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("Users", "usr");
                });

            modelBuilder.Entity("CleanArc.Domain.Entities.User.UserClaim", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("UserClaims", "usr");
                });

            modelBuilder.Entity("CleanArc.Domain.Entities.User.UserLogin", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("LoggedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("UserLogins", "usr");
                });

            modelBuilder.Entity("CleanArc.Domain.Entities.User.UserRefreshToken", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsValid")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("UserRefreshTokens", "usr");
                });

            modelBuilder.Entity("CleanArc.Domain.Entities.User.UserRole", b =>
                {
                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedUserRoleDate")
                        .HasColumnType("datetime2");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("UserRoles", "usr");
                });

            modelBuilder.Entity("CleanArc.Domain.Entities.User.UserToken", b =>
                {
                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("GeneratedTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("UserTokens", "usr");
                });

            modelBuilder.Entity("TIndividu", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("AbrvInd")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AdrInd")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CodSclas")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CodTvaInd")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ContactId")
                        .HasColumnType("int");

                    b.Property<string>("CpInd")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DatDebExo")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DatFinExo")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DatInfoInd")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DatNaissCreat")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateDocIdInd")
                        .HasColumnType("datetime2");

                    b.Property<string>("EmailInd")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("ExoInd")
                        .HasColumnType("bit");

                    b.Property<bool?>("ExoTva")
                        .HasColumnType("bit");

                    b.Property<string>("FaxInd")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FromJurInd")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("GenreInd")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("GrpInd")
                        .HasColumnType("bit");

                    b.Property<int?>("IdNldp")
                        .HasColumnType("int");

                    b.Property<string>("InfoInd")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LieuDocIdInd")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("LimCredGloInd")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("LimFinGloInd")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("MfInd")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("NomInd")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NumDocIdInd")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhotoInd")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PreInd")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RcInd")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RefAchInd")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RefAdhInd")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TelInd")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TypDocIdInd")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("idContact")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ContactId");

                    b.ToTable("TIndividus");
                });

            modelBuilder.Entity("CleanArc.Domain.Entities.Order.Order", b =>
                {
                    b.HasOne("CleanArc.Domain.Entities.User.User", "User")
                        .WithMany("Orders")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("CleanArc.Domain.Entities.TAdresse", b =>
                {
                    b.HasOne("TIndividu", "Individu")
                        .WithMany("Adresses")
                        .HasForeignKey("IndividuId");

                    b.Navigation("Individu");
                });

            modelBuilder.Entity("CleanArc.Domain.Entities.TBordereau", b =>
                {
                    b.HasOne("CleanArc.Domain.Entities.TContrat", "Contrat")
                        .WithMany("Bordereaus")
                        .HasForeignKey("ContratId");

                    b.Navigation("Contrat");
                });

            modelBuilder.Entity("CleanArc.Domain.Entities.TCalcDispo", b =>
                {
                    b.HasOne("CleanArc.Domain.Entities.TContrat", "Contrat")
                        .WithMany("CalcDispos")
                        .HasForeignKey("ContratId");

                    b.Navigation("Contrat");
                });

            modelBuilder.Entity("CleanArc.Domain.Entities.TCalcInt", b =>
                {
                    b.HasOne("CleanArc.Domain.Entities.TContrat", "Contrat")
                        .WithMany("CalcInts")
                        .HasForeignKey("ContratId");

                    b.Navigation("Contrat");
                });

            modelBuilder.Entity("CleanArc.Domain.Entities.TCalcIntIR", b =>
                {
                    b.HasOne("CleanArc.Domain.Entities.TContrat", "Contrat")
                        .WithMany("CalcIntIrs")
                        .HasForeignKey("ContratId");

                    b.Navigation("Contrat");
                });

            modelBuilder.Entity("CleanArc.Domain.Entities.TComFactoring", b =>
                {
                    b.HasOne("CleanArc.Domain.Entities.TContrat", null)
                        .WithMany("ComFactorings")
                        .HasForeignKey("TContratId");
                });

            modelBuilder.Entity("CleanArc.Domain.Entities.TComMfg", b =>
                {
                    b.HasOne("CleanArc.Domain.Entities.TContrat", "Contrat")
                        .WithMany("ComMfgs")
                        .HasForeignKey("ContratId");

                    b.Navigation("Contrat");
                });

            modelBuilder.Entity("CleanArc.Domain.Entities.TConfigurationEmai", b =>
                {
                    b.HasOne("CleanArc.Domain.Entities.TFactor", "Factor")
                        .WithMany("ConfigurationEmais")
                        .HasForeignKey("FactorId");

                    b.Navigation("Factor");
                });

            modelBuilder.Entity("CleanArc.Domain.Entities.TContact", b =>
                {
                    b.HasOne("CleanArc.Domain.Entities.TComFactoring", null)
                        .WithMany("Contacts")
                        .HasForeignKey("TComFactoringId");
                });

            modelBuilder.Entity("CleanArc.Domain.Entities.TContrat", b =>
                {
                    b.HasOne("CleanArc.Domain.Entities.TDetAss", "DetAss")
                        .WithMany()
                        .HasForeignKey("DetAssId");

                    b.HasOne("CleanArc.Domain.Entities.TFactor", "Factor")
                        .WithMany("Contrats")
                        .HasForeignKey("FactorId");

                    b.HasOne("CleanArc.Domain.Entities.TFraisDivers", "FraisDivers")
                        .WithMany("Contrats")
                        .HasForeignKey("FraisDiversId");

                    b.HasOne("CleanArc.Domain.Entities.TFraisReleve", null)
                        .WithMany("Contrats")
                        .HasForeignKey("TFraisReleveId");

                    b.HasOne("CleanArc.Domain.Entities.TMvtDebit", null)
                        .WithMany("Contrats")
                        .HasForeignKey("TMvtDebitId");

                    b.Navigation("DetAss");

                    b.Navigation("Factor");

                    b.Navigation("FraisDivers");
                });

            modelBuilder.Entity("CleanArc.Domain.Entities.TDemLimite", b =>
                {
                    b.HasOne("CleanArc.Domain.Entities.TContact", "Contact")
                        .WithMany()
                        .HasForeignKey("ContactId");

                    b.HasOne("TIndividu", "Individu")
                        .WithMany("DemLimites")
                        .HasForeignKey("IndividuId");

                    b.Navigation("Contact");

                    b.Navigation("Individu");
                });

            modelBuilder.Entity("CleanArc.Domain.Entities.TDetBord", b =>
                {
                    b.HasOne("CleanArc.Domain.Entities.TBordereau", "Bordereau")
                        .WithMany("DetBords")
                        .HasForeignKey("BordereauId");

                    b.HasOne("CleanArc.Domain.Entities.TContrat", "Contrat")
                        .WithMany()
                        .HasForeignKey("ContratId");

                    b.HasOne("CleanArc.Domain.Entities.TDocGed", "DocGed")
                        .WithMany("DetBords")
                        .HasForeignKey("DocGedId");

                    b.HasOne("CleanArc.Domain.Entities.TLitige", "Litige")
                        .WithMany()
                        .HasForeignKey("LitigeId");

                    b.Navigation("Bordereau");

                    b.Navigation("Contrat");

                    b.Navigation("DocGed");

                    b.Navigation("Litige");
                });

            modelBuilder.Entity("CleanArc.Domain.Entities.TDocGed", b =>
                {
                    b.HasOne("CleanArc.Domain.Entities.TFinancement", "Financement")
                        .WithMany("DocGeds")
                        .HasForeignKey("FinancementId");

                    b.Navigation("Financement");
                });

            modelBuilder.Entity("CleanArc.Domain.Entities.TEcCpt", b =>
                {
                    b.HasOne("CleanArc.Domain.Entities.TContrat", "Contrat")
                        .WithMany("EcCpts")
                        .HasForeignKey("ContratId");

                    b.Navigation("Contrat");
                });

            modelBuilder.Entity("CleanArc.Domain.Entities.TEncaissement", b =>
                {
                    b.HasOne("CleanArc.Domain.Entities.TContrat", "Contrat")
                        .WithMany("Encaissementss")
                        .HasForeignKey("ContratId");

                    b.HasOne("TIndividu", "Individu")
                        .WithMany("Encaissements")
                        .HasForeignKey("IndividuId");

                    b.Navigation("Contrat");

                    b.Navigation("Individu");
                });

            modelBuilder.Entity("CleanArc.Domain.Entities.TEtatDispo", b =>
                {
                    b.HasOne("CleanArc.Domain.Entities.TContrat", "Contrat")
                        .WithMany("EtatDispos")
                        .HasForeignKey("ContratId");

                    b.Navigation("Contrat");
                });

            modelBuilder.Entity("CleanArc.Domain.Entities.TFactor", b =>
                {
                    b.HasOne("CleanArc.Domain.Entities.TRTMM", "Trtmm")
                        .WithMany("Factors")
                        .HasForeignKey("TrtmmId");

                    b.Navigation("Trtmm");
                });

            modelBuilder.Entity("CleanArc.Domain.Entities.TFinancement", b =>
                {
                    b.HasOne("CleanArc.Domain.Entities.TContrat", "Contrat")
                        .WithMany("Financements")
                        .HasForeignKey("ContratId");

                    b.Navigation("Contrat");
                });

            modelBuilder.Entity("CleanArc.Domain.Entities.TFondGarantie", b =>
                {
                    b.HasOne("CleanArc.Domain.Entities.TContrat", "Contrat")
                        .WithMany("FondGaranties")
                        .HasForeignKey("ContratId");

                    b.Navigation("Contrat");
                });

            modelBuilder.Entity("CleanArc.Domain.Entities.TFraisDivers", b =>
                {
                    b.HasOne("CleanArc.Domain.Entities.TComFactoring", "ComFactoring")
                        .WithMany("FraisDiversCollection")
                        .HasForeignKey("ComFactoringId");

                    b.Navigation("ComFactoring");
                });

            modelBuilder.Entity("CleanArc.Domain.Entities.TFraisPaiment", b =>
                {
                    b.HasOne("CleanArc.Domain.Entities.TContrat", "Contrat")
                        .WithMany("FraisPaiments")
                        .HasForeignKey("ContratId");

                    b.Navigation("Contrat");
                });

            modelBuilder.Entity("CleanArc.Domain.Entities.TImpaye", b =>
                {
                    b.HasOne("CleanArc.Domain.Entities.TImpaye", "Impaye")
                        .WithMany()
                        .HasForeignKey("ImpayeId");

                    b.Navigation("Impaye");
                });

            modelBuilder.Entity("CleanArc.Domain.Entities.TIntFinancement", b =>
                {
                    b.HasOne("CleanArc.Domain.Entities.TContrat", "Contrat")
                        .WithMany("IntFinancements")
                        .HasForeignKey("ContratId");

                    b.Navigation("Contrat");
                });

            modelBuilder.Entity("CleanArc.Domain.Entities.TJCir", b =>
                {
                    b.HasOne("CleanArc.Domain.Entities.TContrat", "Contrat")
                        .WithMany()
                        .HasForeignKey("ContratId");

                    b.HasOne("TIndividu", "Individu")
                        .WithMany("Cirs")
                        .HasForeignKey("IndividuId");

                    b.HasOne("CleanArc.Domain.Entities.TRole", "Role")
                        .WithMany("UCirs")
                        .HasForeignKey("RoleId");

                    b.Navigation("Contrat");

                    b.Navigation("Individu");

                    b.Navigation("Role");
                });

            modelBuilder.Entity("CleanArc.Domain.Entities.TJLettrage", b =>
                {
                    b.HasOne("CleanArc.Domain.Entities.TDetBord", "DetBordt")
                        .WithMany("JLettrage")
                        .HasForeignKey("DetBordtId");

                    b.HasOne("CleanArc.Domain.Entities.TEncaissement", "Encaissement")
                        .WithMany("Lettrages")
                        .HasForeignKey("EncaissementId");

                    b.Navigation("DetBordt");

                    b.Navigation("Encaissement");
                });

            modelBuilder.Entity("CleanArc.Domain.Entities.TLitige", b =>
                {
                    b.HasOne("CleanArc.Domain.Entities.TContrat", "Contrat")
                        .WithMany("Litiges")
                        .HasForeignKey("ContratId");

                    b.Navigation("Contrat");
                });

            modelBuilder.Entity("CleanArc.Domain.Entities.TMvtCredit", b =>
                {
                    b.HasOne("CleanArc.Domain.Entities.TContrat", "Contrat")
                        .WithMany("MvtCredits")
                        .HasForeignKey("ContratId");

                    b.Navigation("Contrat");
                });

            modelBuilder.Entity("CleanArc.Domain.Entities.TPermissions", b =>
                {
                    b.HasOne("CleanArc.Domain.Entities.TSGrpUser", "GrpUser")
                        .WithMany("Permissions")
                        .HasForeignKey("GrpUserId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("CleanArc.Domain.Entities.TRListVal", "TrListVal")
                        .WithMany("Permissions")
                        .HasForeignKey("TrListValId");

                    b.Navigation("GrpUser");

                    b.Navigation("TrListVal");
                });

            modelBuilder.Entity("CleanArc.Domain.Entities.TPropagation", b =>
                {
                    b.HasOne("CleanArc.Domain.Entities.TContrat", "Contrat")
                        .WithMany("Propagations")
                        .HasForeignKey("ContratId");

                    b.HasOne("CleanArc.Domain.Entities.TDetBord", "DetBord")
                        .WithMany("Propagations")
                        .HasForeignKey("DetBordId");

                    b.Navigation("Contrat");

                    b.Navigation("DetBord");
                });

            modelBuilder.Entity("CleanArc.Domain.Entities.TRActprofBct", b =>
                {
                    b.HasOne("CleanArc.Domain.Entities.TFactor", "Factor")
                        .WithMany("ActprofBcts")
                        .HasForeignKey("FactorId");

                    b.Navigation("Factor");
                });

            modelBuilder.Entity("CleanArc.Domain.Entities.TRAgBq", b =>
                {
                    b.HasOne("CleanArc.Domain.Entities.TFactor", "Factor")
                        .WithMany("AgBqs")
                        .HasForeignKey("FactorId");

                    b.Navigation("Factor");
                });

            modelBuilder.Entity("CleanArc.Domain.Entities.TRComFactoring", b =>
                {
                    b.HasOne("CleanArc.Domain.Entities.TFactor", "Factor")
                        .WithMany("ComFactorings")
                        .HasForeignKey("FactorId");

                    b.Navigation("Factor");
                });

            modelBuilder.Entity("CleanArc.Domain.Entities.TRCp", b =>
                {
                    b.HasOne("CleanArc.Domain.Entities.TFactor", "Factor")
                        .WithMany("Cps")
                        .HasForeignKey("FactorId");

                    b.Navigation("Factor");
                });

            modelBuilder.Entity("CleanArc.Domain.Entities.TRIntFinancement", b =>
                {
                    b.HasOne("CleanArc.Domain.Entities.TFactor", "Factor")
                        .WithMany("TrIntFinancements")
                        .HasForeignKey("FactorId");

                    b.Navigation("Factor");
                });

            modelBuilder.Entity("CleanArc.Domain.Entities.TRListFraisDivers", b =>
                {
                    b.HasOne("CleanArc.Domain.Entities.TFactor", "Factor")
                        .WithMany("FraisDiversCollection")
                        .HasForeignKey("FactorId");

                    b.Navigation("Factor");
                });

            modelBuilder.Entity("CleanArc.Domain.Entities.TRNldp", b =>
                {
                    b.HasOne("CleanArc.Domain.Entities.TFactor", "Factor")
                        .WithMany("Nldps")
                        .HasForeignKey("FactorId");

                    b.Navigation("Factor");
                });

            modelBuilder.Entity("CleanArc.Domain.Entities.TRParamPiece", b =>
                {
                    b.HasOne("CleanArc.Domain.Entities.TFactor", "Factor")
                        .WithMany("TrParamPieces")
                        .HasForeignKey("FactorId");

                    b.Navigation("Factor");
                });

            modelBuilder.Entity("CleanArc.Domain.Entities.TRTva", b =>
                {
                    b.HasOne("CleanArc.Domain.Entities.TFactor", "Factor")
                        .WithMany("Tvas")
                        .HasForeignKey("FactorId");

                    b.Navigation("Factor");
                });

            modelBuilder.Entity("CleanArc.Domain.Entities.TRelance", b =>
                {
                    b.HasOne("CleanArc.Domain.Entities.TContrat", "Contrat")
                        .WithMany("Relances")
                        .HasForeignKey("ContratId");

                    b.Navigation("Contrat");
                });

            modelBuilder.Entity("CleanArc.Domain.Entities.TRibFactor", b =>
                {
                    b.HasOne("CleanArc.Domain.Entities.TFactor", "Factor")
                        .WithMany("RibFactors")
                        .HasForeignKey("FactorId");

                    b.Navigation("Factor");
                });

            modelBuilder.Entity("CleanArc.Domain.Entities.TSGrpUser", b =>
                {
                    b.HasOne("CleanArc.Domain.Entities.TGroupe", "groupe")
                        .WithMany("TsGrpUsers")
                        .HasForeignKey("GroupeId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("groupe");
                });

            modelBuilder.Entity("CleanArc.Domain.Entities.TUser", b =>
                {
                    b.HasOne("CleanArc.Domain.Entities.TFactor", "Factor")
                        .WithMany("Users")
                        .HasForeignKey("FactorId");

                    b.HasOne("CleanArc.Domain.Entities.TSGrpUser", "TsGrpUser")
                        .WithMany("TUsers")
                        .HasForeignKey("TsGrpUserId");

                    b.Navigation("Factor");

                    b.Navigation("TsGrpUser");
                });

            modelBuilder.Entity("CleanArc.Domain.Entities.TUsersWeb", b =>
                {
                    b.HasOne("TIndividu", "Individu")
                        .WithMany("UsersWebs")
                        .HasForeignKey("IndividuId");

                    b.Navigation("Individu");
                });

            modelBuilder.Entity("CleanArc.Domain.Entities.User.RoleClaim", b =>
                {
                    b.HasOne("CleanArc.Domain.Entities.User.Role", "Role")
                        .WithMany("Claims")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Role");
                });

            modelBuilder.Entity("CleanArc.Domain.Entities.User.UserClaim", b =>
                {
                    b.HasOne("CleanArc.Domain.Entities.User.User", "User")
                        .WithMany("Claims")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("CleanArc.Domain.Entities.User.UserLogin", b =>
                {
                    b.HasOne("CleanArc.Domain.Entities.User.User", "User")
                        .WithMany("Logins")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("CleanArc.Domain.Entities.User.UserRefreshToken", b =>
                {
                    b.HasOne("CleanArc.Domain.Entities.User.User", "User")
                        .WithMany("UserRefreshTokens")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("CleanArc.Domain.Entities.User.UserRole", b =>
                {
                    b.HasOne("CleanArc.Domain.Entities.User.Role", "Role")
                        .WithMany("Users")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("CleanArc.Domain.Entities.User.User", "User")
                        .WithMany("UserRoles")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Role");

                    b.Navigation("User");
                });

            modelBuilder.Entity("CleanArc.Domain.Entities.User.UserToken", b =>
                {
                    b.HasOne("CleanArc.Domain.Entities.User.User", "User")
                        .WithMany("Tokens")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("TIndividu", b =>
                {
                    b.HasOne("CleanArc.Domain.Entities.TContact", "Contact")
                        .WithMany("Individus")
                        .HasForeignKey("ContactId");

                    b.Navigation("Contact");
                });

            modelBuilder.Entity("CleanArc.Domain.Entities.TBordereau", b =>
                {
                    b.Navigation("DetBords");
                });

            modelBuilder.Entity("CleanArc.Domain.Entities.TComFactoring", b =>
                {
                    b.Navigation("Contacts");

                    b.Navigation("FraisDiversCollection");
                });

            modelBuilder.Entity("CleanArc.Domain.Entities.TContact", b =>
                {
                    b.Navigation("Individus");
                });

            modelBuilder.Entity("CleanArc.Domain.Entities.TContrat", b =>
                {
                    b.Navigation("Bordereaus");

                    b.Navigation("CalcDispos");

                    b.Navigation("CalcIntIrs");

                    b.Navigation("CalcInts");

                    b.Navigation("ComFactorings");

                    b.Navigation("ComMfgs");

                    b.Navigation("EcCpts");

                    b.Navigation("Encaissementss");

                    b.Navigation("EtatDispos");

                    b.Navigation("Financements");

                    b.Navigation("FondGaranties");

                    b.Navigation("FraisPaiments");

                    b.Navigation("IntFinancements");

                    b.Navigation("Litiges");

                    b.Navigation("MvtCredits");

                    b.Navigation("Propagations");

                    b.Navigation("Relances");
                });

            modelBuilder.Entity("CleanArc.Domain.Entities.TDetBord", b =>
                {
                    b.Navigation("JLettrage");

                    b.Navigation("Propagations");
                });

            modelBuilder.Entity("CleanArc.Domain.Entities.TDocGed", b =>
                {
                    b.Navigation("DetBords");
                });

            modelBuilder.Entity("CleanArc.Domain.Entities.TEncaissement", b =>
                {
                    b.Navigation("Lettrages");
                });

            modelBuilder.Entity("CleanArc.Domain.Entities.TFactor", b =>
                {
                    b.Navigation("ActprofBcts");

                    b.Navigation("AgBqs");

                    b.Navigation("ComFactorings");

                    b.Navigation("ConfigurationEmais");

                    b.Navigation("Contrats");

                    b.Navigation("Cps");

                    b.Navigation("FraisDiversCollection");

                    b.Navigation("Nldps");

                    b.Navigation("RibFactors");

                    b.Navigation("TrIntFinancements");

                    b.Navigation("TrParamPieces");

                    b.Navigation("Tvas");

                    b.Navigation("Users");
                });

            modelBuilder.Entity("CleanArc.Domain.Entities.TFinancement", b =>
                {
                    b.Navigation("DocGeds");
                });

            modelBuilder.Entity("CleanArc.Domain.Entities.TFraisDivers", b =>
                {
                    b.Navigation("Contrats");
                });

            modelBuilder.Entity("CleanArc.Domain.Entities.TFraisReleve", b =>
                {
                    b.Navigation("Contrats");
                });

            modelBuilder.Entity("CleanArc.Domain.Entities.TGroupe", b =>
                {
                    b.Navigation("TsGrpUsers");
                });

            modelBuilder.Entity("CleanArc.Domain.Entities.TMvtDebit", b =>
                {
                    b.Navigation("Contrats");
                });

            modelBuilder.Entity("CleanArc.Domain.Entities.TRListVal", b =>
                {
                    b.Navigation("Permissions");
                });

            modelBuilder.Entity("CleanArc.Domain.Entities.TRTMM", b =>
                {
                    b.Navigation("Factors");
                });

            modelBuilder.Entity("CleanArc.Domain.Entities.TRole", b =>
                {
                    b.Navigation("UCirs");
                });

            modelBuilder.Entity("CleanArc.Domain.Entities.TSGrpUser", b =>
                {
                    b.Navigation("Permissions");

                    b.Navigation("TUsers");
                });

            modelBuilder.Entity("CleanArc.Domain.Entities.User.Role", b =>
                {
                    b.Navigation("Claims");

                    b.Navigation("Users");
                });

            modelBuilder.Entity("CleanArc.Domain.Entities.User.User", b =>
                {
                    b.Navigation("Claims");

                    b.Navigation("Logins");

                    b.Navigation("Orders");

                    b.Navigation("Tokens");

                    b.Navigation("UserRefreshTokens");

                    b.Navigation("UserRoles");
                });

            modelBuilder.Entity("TIndividu", b =>
                {
                    b.Navigation("Adresses");

                    b.Navigation("Cirs");

                    b.Navigation("DemLimites");

                    b.Navigation("Encaissements");

                    b.Navigation("UsersWebs");
                });
#pragma warning restore 612, 618
        }
    }
}
